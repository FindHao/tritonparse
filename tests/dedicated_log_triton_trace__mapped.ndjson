{"event_type":"compilation","pid":621033,"stack":[{"line":69,"name":"<module>","filename":"/home/yhao/tritonparse/tests/test_add.py","loc":"test_tensor_add()"},{"line":57,"name":"test_tensor_add","filename":"/home/yhao/tritonparse/tests/test_add.py","loc":"c_triton = tensor_add(a, b)"},{"line":42,"name":"tensor_add","filename":"/home/yhao/tritonparse/tests/test_add.py","loc":"add_kernel[grid](a, b, c, n_elements, BLOCK_SIZE)"},{"line":374,"name":"<lambda>","filename":"/home/yhao/p9b/triton/python/triton/runtime/jit.py","loc":"return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)"},{"line":610,"name":"run","filename":"/home/yhao/p9b/triton/python/triton/runtime/jit.py","loc":"kernel = self.compile(src, target=target, options=options.__dict__)"},{"line":385,"name":"compile","filename":"/home/yhao/p9b/triton/python/triton/compiler/compiler.py","loc":"compilation_listener(src=src, metadata=metadata, metadata_group=metadata_group, times=timer.end(),"},{"line":547,"name":"maybe_trace_triton","filename":"/home/yhao/tritonparse/tritonparse/structured_logging.py","loc":"trace_structured_triton("},{"line":467,"name":"trace_structured_triton","filename":"/home/yhao/tritonparse/tritonparse/structured_logging.py","loc":"metadata_dict[\"stack\"] = get_stack_trace()"}],"timestamp":"2025-05-09T13:29:44.%fZ","payload":{"metadata":{"cache_hit":false,"hash":"686bd3a8d1c50f213c66a6b8352b9eee5dc9cbca74aca2e6f199d621e7853199","target":{"backend":"cuda","arch":90,"warp_size":32},"num_warps":4,"num_ctas":1,"num_stages":3,"maxnreg":null,"cluster_dims":[1,1,1],"ptx_version":null,"enable_fp_fusion":true,"launch_cooperative_grid":false,"launch_pdl":false,"supported_fp8_dtypes":["fp8e4b15","fp8e4nv","fp8e5"],"deprecated_fp8_dtypes":["fp8e4b15"],"default_dot_input_precision":"tf32","allowed_dot_input_precisions":["tf32","tf32x3","ieee"],"max_num_imprecise_acc_default":1073741824,"extern_libs":[["libdevice","/home/yhao/p9b/triton/python/triton/backends/nvidia/lib/libdevice.10.bc"]],"debug":false,"backend_name":"cuda","sanitize_overflow":true,"arch":"sm90","triton_version":"3.3.0","tensordesc_meta":[],"shared":0,"tmem_size":0,"global_scratch_size":0,"global_scratch_align":1,"name":"add_kernel"},"file_path":{"add_kernel.ttir":"/home/yhao/.triton/cache/NBV5HKGRYUHSCPDGU24DKK465ZO4TS6KOSWKFZXRTHLCDZ4FGGMQ/add_kernel.ttir","add_kernel.ttgir":"/home/yhao/.triton/cache/NBV5HKGRYUHSCPDGU24DKK465ZO4TS6KOSWKFZXRTHLCDZ4FGGMQ/add_kernel.ttgir","add_kernel.llir":"/home/yhao/.triton/cache/NBV5HKGRYUHSCPDGU24DKK465ZO4TS6KOSWKFZXRTHLCDZ4FGGMQ/add_kernel.llir","add_kernel.ptx":"/home/yhao/.triton/cache/NBV5HKGRYUHSCPDGU24DKK465ZO4TS6KOSWKFZXRTHLCDZ4FGGMQ/add_kernel.ptx","add_kernel.cubin":"/home/yhao/.triton/cache/NBV5HKGRYUHSCPDGU24DKK465ZO4TS6KOSWKFZXRTHLCDZ4FGGMQ/add_kernel.cubin","add_kernel.json":"/home/yhao/.triton/cache/NBV5HKGRYUHSCPDGU24DKK465ZO4TS6KOSWKFZXRTHLCDZ4FGGMQ/add_kernel.json"},"file_content":{"add_kernel.ttir":"#loc = loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0)\nmodule {\n  tt.func public @add_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0)) attributes {noinline = false} {\n    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<1024xi32> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<1024xf32> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":26:24)\n#loc3 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":27:24)\n#loc4 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":28:41)\n#loc5 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":28:28)\n#loc6 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":29:21)\n#loc7 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":31:24)\n#loc8 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":31:16)\n#loc9 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":32:24)\n#loc10 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":32:16)\n#loc11 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":33:12)\n#loc12 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":34:21)\n#loc13 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":34:30)\n#loc14 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":34:4)\n","add_kernel.ttgir":"#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>\n#loc = loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0)\nmodule attributes {\"ttg.num-ctas\" = 1 : i32, \"ttg.num-warps\" = 4 : i32, ttg.target = \"cuda:90\", \"ttg.threads-per-warp\" = 32 : i32} {\n  tt.func public @add_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/home/yhao/tritonparse/tests/test_add.py\":19:0)) attributes {noinline = false} {\n    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<1024xi32, #blocked> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32, #blocked> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<1024xf32, #blocked> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":26:24)\n#loc3 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":27:24)\n#loc4 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":28:41)\n#loc5 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":28:28)\n#loc6 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":29:21)\n#loc7 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":31:24)\n#loc8 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":31:16)\n#loc9 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":32:24)\n#loc10 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":32:16)\n#loc11 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":33:12)\n#loc12 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":34:21)\n#loc13 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":34:30)\n#loc14 = loc(\"/home/yhao/tritonparse/tests/test_add.py\":34:4)\n","add_kernel.llir":"; ModuleID = 'LLVMDialectModule'\nsource_filename = \"LLVMDialectModule\"\ntarget datalayout = \"e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64\"\n\ndefine ptx_kernel void @add_kernel(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {\n  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8\n  %7 = shl i32 %6, 10, !dbg !9\n  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10\n  %9 = shl i32 %8, 2, !dbg !10\n  %10 = and i32 %9, 508, !dbg !10\n  %11 = or disjoint i32 %10, %7, !dbg !11\n  %12 = or disjoint i32 %11, 512, !dbg !11\n  %13 = icmp slt i32 %11, %3, !dbg !12\n  %14 = icmp slt i32 %12, %3, !dbg !12\n  %15 = sext i32 %11 to i64, !dbg !13\n  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !13\n  %17 = sext i32 %12 to i64, !dbg !13\n  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !13\n  %19 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %16, i1 %13) #2, !dbg !14\n  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !14\n  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !14\n  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !14\n  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !14\n  %24 = bitcast i32 %20 to float, !dbg !14\n  %25 = bitcast i32 %21 to float, !dbg !14\n  %26 = bitcast i32 %22 to float, !dbg !14\n  %27 = bitcast i32 %23 to float, !dbg !14\n  %28 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %18, i1 %14) #2, !dbg !14\n  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !14\n  %30 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !14\n  %31 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !14\n  %32 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !14\n  %33 = bitcast i32 %29 to float, !dbg !14\n  %34 = bitcast i32 %30 to float, !dbg !14\n  %35 = bitcast i32 %31 to float, !dbg !14\n  %36 = bitcast i32 %32 to float, !dbg !14\n  %37 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !15\n  %38 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !15\n  %39 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %37, i1 %13) #2, !dbg !16\n  %40 = extractvalue { i32, i32, i32, i32 } %39, 0, !dbg !16\n  %41 = extractvalue { i32, i32, i32, i32 } %39, 1, !dbg !16\n  %42 = extractvalue { i32, i32, i32, i32 } %39, 2, !dbg !16\n  %43 = extractvalue { i32, i32, i32, i32 } %39, 3, !dbg !16\n  %44 = bitcast i32 %40 to float, !dbg !16\n  %45 = bitcast i32 %41 to float, !dbg !16\n  %46 = bitcast i32 %42 to float, !dbg !16\n  %47 = bitcast i32 %43 to float, !dbg !16\n  %48 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %38, i1 %14) #2, !dbg !16\n  %49 = extractvalue { i32, i32, i32, i32 } %48, 0, !dbg !16\n  %50 = extractvalue { i32, i32, i32, i32 } %48, 1, !dbg !16\n  %51 = extractvalue { i32, i32, i32, i32 } %48, 2, !dbg !16\n  %52 = extractvalue { i32, i32, i32, i32 } %48, 3, !dbg !16\n  %53 = bitcast i32 %49 to float, !dbg !16\n  %54 = bitcast i32 %50 to float, !dbg !16\n  %55 = bitcast i32 %51 to float, !dbg !16\n  %56 = bitcast i32 %52 to float, !dbg !16\n  %57 = fadd float %24, %44, !dbg !17\n  %58 = fadd float %25, %45, !dbg !17\n  %59 = fadd float %26, %46, !dbg !17\n  %60 = fadd float %27, %47, !dbg !17\n  %61 = fadd float %33, %53, !dbg !17\n  %62 = fadd float %34, %54, !dbg !17\n  %63 = fadd float %35, %55, !dbg !17\n  %64 = fadd float %36, %56, !dbg !17\n  %65 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !18\n  %66 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !18\n  %67 = bitcast float %57 to i32, !dbg !19\n  %68 = bitcast float %58 to i32, !dbg !19\n  %69 = bitcast float %59 to i32, !dbg !19\n  %70 = bitcast float %60 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %67, i32 %68, i32 %69, i32 %70, ptr addrspace(1) %65, i1 %13) #2, !dbg !19\n  %71 = bitcast float %61 to i32, !dbg !19\n  %72 = bitcast float %62 to i32, !dbg !19\n  %73 = bitcast float %63 to i32, !dbg !19\n  %74 = bitcast float %64 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %71, i32 %72, i32 %73, i32 %74, ptr addrspace(1) %66, i1 %14) #2, !dbg !19\n  ret void, !dbg !20\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1\n\nattributes #0 = { \"nvvm.reqntid\"=\"128\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }\nattributes #2 = { nounwind }\n\n!llvm.dbg.cu = !{!0}\n!llvm.module.flags = !{!2, !3}\n!llvm.ident = !{!4}\n\n!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: \"triton\", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)\n!1 = !DIFile(filename: \"test_add.py\", directory: \"/home/yhao/tritonparse/tests\")\n!2 = !{i32 2, !\"Debug Info Version\", i32 3}\n!3 = !{i32 4, !\"nvvm-reflect-ftz\", i32 1}\n!4 = !{!\"clang version 3.8.0 (tags/RELEASE_380/final)\"}\n!5 = distinct !DISubprogram(name: \"add_kernel\", linkageName: \"add_kernel\", scope: !1, file: !1, line: 19, type: !6, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)\n!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)\n!7 = !{}\n!8 = !DILocation(line: 26, column: 24, scope: !5)\n!9 = !DILocation(line: 27, column: 24, scope: !5)\n!10 = !DILocation(line: 28, column: 41, scope: !5)\n!11 = !DILocation(line: 28, column: 28, scope: !5)\n!12 = !DILocation(line: 29, column: 21, scope: !5)\n!13 = !DILocation(line: 31, column: 24, scope: !5)\n!14 = !DILocation(line: 31, column: 16, scope: !5)\n!15 = !DILocation(line: 32, column: 24, scope: !5)\n!16 = !DILocation(line: 32, column: 16, scope: !5)\n!17 = !DILocation(line: 33, column: 12, scope: !5)\n!18 = !DILocation(line: 34, column: 21, scope: !5)\n!19 = !DILocation(line: 34, column: 30, scope: !5)\n!20 = !DILocation(line: 34, column: 4, scope: !5)\n","add_kernel.ptx":"//\n// Generated by LLVM NVPTX Back-End\n//\n\n.version 8.7\n.target sm_90a\n.address_size 64\n\n\t// .globl\tadd_kernel              // -- Begin function add_kernel\n                                        // @add_kernel\n.visible .entry add_kernel(\n\t.param .u64 .ptr .global .align 1 add_kernel_param_0,\n\t.param .u64 .ptr .global .align 1 add_kernel_param_1,\n\t.param .u64 .ptr .global .align 1 add_kernel_param_2,\n\t.param .u32 add_kernel_param_3,\n\t.param .u64 .ptr .global .align 1 add_kernel_param_4\n)\n.reqntid 128\n{\n\t.reg .pred \t%p<7>;\n\t.reg .b32 \t%r<33>;\n\t.reg .f32 \t%f<25>;\n\t.reg .b64 \t%rd<11>;\n\t.loc\t1 19 0                          // test_add.py:19:0\n$L__func_begin0:\n\t.loc\t1 19 0                          // test_add.py:19:0\n\n// %bb.0:\n\tld.param.u64 \t%rd7, [add_kernel_param_0];\n\tld.param.u64 \t%rd8, [add_kernel_param_1];\n$L__tmp0:\n\t.loc\t1 26 24                         // test_add.py:26:24\n\tmov.u32 \t%r25, %ctaid.x;\n\t.loc\t1 27 24                         // test_add.py:27:24\n\tshl.b32 \t%r26, %r25, 10;\n\tld.param.u64 \t%rd9, [add_kernel_param_2];\n\tld.param.u32 \t%r27, [add_kernel_param_3];\n\t.loc\t1 28 41                         // test_add.py:28:41\n\tmov.u32 \t%r28, %tid.x;\n\tshl.b32 \t%r29, %r28, 2;\n\tand.b32  \t%r30, %r29, 508;\n\t.loc\t1 28 28                         // test_add.py:28:28\n\tor.b32  \t%r31, %r30, %r26;\n\tor.b32  \t%r32, %r31, 512;\n\t.loc\t1 29 21                         // test_add.py:29:21\n\tsetp.lt.s32 \t%p1, %r31, %r27;\n\tsetp.lt.s32 \t%p2, %r32, %r27;\n\t.loc\t1 31 24                         // test_add.py:31:24\n\tmul.wide.s32 \t%rd10, %r31, 4;\n\tadd.s64 \t%rd1, %rd7, %rd10;\n\tadd.s64 \t%rd2, %rd1, 2048;\n\t.loc\t1 31 16                         // test_add.py:31:16\n\t// begin inline asm\n\tmov.u32 %r1, 0x0;\n\tmov.u32 %r2, 0x0;\n\tmov.u32 %r3, 0x0;\n\tmov.u32 %r4, 0x0;\n\t@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];\n\t// end inline asm\n\tmov.b32 \t%f1, %r1;\n\tmov.b32 \t%f2, %r2;\n\tmov.b32 \t%f3, %r3;\n\tmov.b32 \t%f4, %r4;\n\t// begin inline asm\n\tmov.u32 %r5, 0x0;\n\tmov.u32 %r6, 0x0;\n\tmov.u32 %r7, 0x0;\n\tmov.u32 %r8, 0x0;\n\t@%p2 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];\n\t// end inline asm\n\tmov.b32 \t%f5, %r5;\n\tmov.b32 \t%f6, %r6;\n\tmov.b32 \t%f7, %r7;\n\tmov.b32 \t%f8, %r8;\n\t.loc\t1 32 24                         // test_add.py:32:24\n\tadd.s64 \t%rd3, %rd8, %rd10;\n\tadd.s64 \t%rd4, %rd3, 2048;\n\t.loc\t1 32 16                         // test_add.py:32:16\n\t// begin inline asm\n\tmov.u32 %r9, 0x0;\n\tmov.u32 %r10, 0x0;\n\tmov.u32 %r11, 0x0;\n\tmov.u32 %r12, 0x0;\n\t@%p1 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];\n\t// end inline asm\n\tmov.b32 \t%f9, %r9;\n\tmov.b32 \t%f10, %r10;\n\tmov.b32 \t%f11, %r11;\n\tmov.b32 \t%f12, %r12;\n\t// begin inline asm\n\tmov.u32 %r13, 0x0;\n\tmov.u32 %r14, 0x0;\n\tmov.u32 %r15, 0x0;\n\tmov.u32 %r16, 0x0;\n\t@%p2 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];\n\t// end inline asm\n\tmov.b32 \t%f13, %r13;\n\tmov.b32 \t%f14, %r14;\n\tmov.b32 \t%f15, %r15;\n\tmov.b32 \t%f16, %r16;\n\t.loc\t1 33 12                         // test_add.py:33:12\n\tadd.f32 \t%f17, %f1, %f9;\n\tadd.f32 \t%f18, %f2, %f10;\n\tadd.f32 \t%f19, %f3, %f11;\n\tadd.f32 \t%f20, %f4, %f12;\n\tadd.f32 \t%f21, %f5, %f13;\n\tadd.f32 \t%f22, %f6, %f14;\n\tadd.f32 \t%f23, %f7, %f15;\n\tadd.f32 \t%f24, %f8, %f16;\n\t.loc\t1 34 21                         // test_add.py:34:21\n\tadd.s64 \t%rd5, %rd9, %rd10;\n\tadd.s64 \t%rd6, %rd5, 2048;\n\t.loc\t1 34 30                         // test_add.py:34:30\n\tmov.b32 \t%r17, %f17;\n\tmov.b32 \t%r18, %f18;\n\tmov.b32 \t%r19, %f19;\n\tmov.b32 \t%r20, %f20;\n\t// begin inline asm\n\t@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r17, %r18, %r19, %r20 };\n\t// end inline asm\n\tmov.b32 \t%r21, %f21;\n\tmov.b32 \t%r22, %f22;\n\tmov.b32 \t%r23, %f23;\n\tmov.b32 \t%r24, %f24;\n\t// begin inline asm\n\t@%p2 st.global.v4.b32 [ %rd6 + 0 ], { %r21, %r22, %r23, %r24 };\n\t// end inline asm\n\t.loc\t1 34 4                          // test_add.py:34:4\n\tret;\n$L__tmp1:\n$L__func_end0:\n                                        // -- End function\n}\n\t.file\t1 \"/home/yhao/tritonparse/tests/test_add.py\"\n\t.section\t.debug_abbrev\n\t{\n.b8 1                                   // Abbreviation Code\n.b8 17                                  // DW_TAG_compile_unit\n.b8 0                                   // DW_CHILDREN_no\n.b8 37                                  // DW_AT_producer\n.b8 8                                   // DW_FORM_string\n.b8 19                                  // DW_AT_language\n.b8 5                                   // DW_FORM_data2\n.b8 3                                   // DW_AT_name\n.b8 8                                   // DW_FORM_string\n.b8 16                                  // DW_AT_stmt_list\n.b8 6                                   // DW_FORM_data4\n.b8 27                                  // DW_AT_comp_dir\n.b8 8                                   // DW_FORM_string\n.b8 0                                   // EOM(1)\n.b8 0                                   // EOM(2)\n.b8 0                                   // EOM(3)\n\t}\n\t.section\t.debug_info\n\t{\n.b32 62                                 // Length of Unit\n.b8 2                                   // DWARF version number\n.b8 0\n.b32 .debug_abbrev                      // Offset Into Abbrev. Section\n.b8 8                                   // Address Size (in bytes)\n.b8 1                                   // Abbrev [1] 0xb:0x37 DW_TAG_compile_unit\n.b8 116                                 // DW_AT_producer\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 0\n.b8 2                                   // DW_AT_language\n.b8 0\n.b8 116                                 // DW_AT_name\n.b8 101\n.b8 115\n.b8 116\n.b8 95\n.b8 97\n.b8 100\n.b8 100\n.b8 46\n.b8 112\n.b8 121\n.b8 0\n.b32 .debug_line                        // DW_AT_stmt_list\n.b8 47                                  // DW_AT_comp_dir\n.b8 104\n.b8 111\n.b8 109\n.b8 101\n.b8 47\n.b8 121\n.b8 104\n.b8 97\n.b8 111\n.b8 47\n.b8 116\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 112\n.b8 97\n.b8 114\n.b8 115\n.b8 101\n.b8 47\n.b8 116\n.b8 101\n.b8 115\n.b8 116\n.b8 115\n.b8 0\n\t}\n\t.section\t.debug_macinfo\t{\t}\n","add_kernel.json":"{\"hash\": \"686bd3a8d1c50f213c66a6b8352b9eee5dc9cbca74aca2e6f199d621e7853199\", \"target\": {\"backend\": \"cuda\", \"arch\": 90, \"warp_size\": 32}, \"num_warps\": 4, \"num_ctas\": 1, \"num_stages\": 3, \"maxnreg\": null, \"cluster_dims\": [1, 1, 1], \"ptx_version\": null, \"enable_fp_fusion\": true, \"launch_cooperative_grid\": false, \"launch_pdl\": false, \"supported_fp8_dtypes\": [\"fp8e4b15\", \"fp8e4nv\", \"fp8e5\"], \"deprecated_fp8_dtypes\": [\"fp8e4b15\"], \"default_dot_input_precision\": \"tf32\", \"allowed_dot_input_precisions\": [\"tf32\", \"tf32x3\", \"ieee\"], \"max_num_imprecise_acc_default\": 1073741824, \"extern_libs\": [[\"libdevice\", \"/home/yhao/p9b/triton/python/triton/backends/nvidia/lib/libdevice.10.bc\"]], \"debug\": false, \"backend_name\": \"cuda\", \"sanitize_overflow\": true, \"arch\": \"sm90\", \"triton_version\": \"3.3.0\", \"tensordesc_meta\": [], \"shared\": 0, \"tmem_size\": 0, \"global_scratch_size\": 0, \"global_scratch_align\": 1, \"name\": \"add_kernel\"}"},"python_source":{"file_path":"/home/yhao/tritonparse/tests/test_add.py","start_line":18,"end_line":35,"code":"@triton.jit\ndef add_kernel(\n    a_ptr,\n    b_ptr,\n    c_ptr,\n    n_elements,\n    BLOCK_SIZE: tl.constexpr,\n):\n    pid = tl.program_id(axis=0)\n    block_start = pid * BLOCK_SIZE\n    offsets = block_start + tl.arange(0, BLOCK_SIZE)\n    mask = offsets < n_elements\n\n    a = tl.load(a_ptr + offsets, mask=mask)\n    b = tl.load(b_ptr + offsets, mask=mask)\n    c = a + b\n    tl.store(c_ptr + offsets, c, mask=mask)\n"},"source_mappings":{"ttir":{"1":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ttir_line":1,"ttgir_lines":[2,4,5],"ptx_lines":[24,25,26,29,30,31]},"3":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ttir_line":3,"ttgir_lines":[2,4,5],"ptx_lines":[24,25,26,29,30,31]},"4":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ttir_line":4,"ttgir_lines":[2,4,5],"ptx_lines":[24,25,26,29,30,31]},"5":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":26,"column":24,"ttir_line":5,"ttgir_lines":[6,27],"ptx_lines":[32,33]},"6":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":27,"column":24,"ttir_line":6,"ttgir_lines":[7,28],"ptx_lines":[34,35,36,37]},"7":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":41,"ttir_line":7,"ttgir_lines":[8,29],"ptx_lines":[38,39,40,41]},"8":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ttir_line":8,"ttgir_lines":[9,10,30],"ptx_lines":[42,43,44]},"9":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ttir_line":9,"ttgir_lines":[9,10,30],"ptx_lines":[42,43,44]},"10":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ttir_line":10,"ttgir_lines":[11,12,31],"ptx_lines":[45,46,47]},"11":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ttir_line":11,"ttgir_lines":[11,12,31],"ptx_lines":[45,46,47]},"12":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ttir_line":12,"ttgir_lines":[13,14,32],"ptx_lines":[48,49,50,51]},"13":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ttir_line":13,"ttgir_lines":[13,14,32],"ptx_lines":[48,49,50,51]},"14":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ttir_line":14,"ttgir_lines":[15,33],"ptx_lines":[52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,71,72,73,74]},"15":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ttir_line":15,"ttgir_lines":[16,17,34],"ptx_lines":[75,76,77]},"16":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ttir_line":16,"ttgir_lines":[16,17,34],"ptx_lines":[75,76,77]},"17":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ttir_line":17,"ttgir_lines":[18,35],"ptx_lines":[78,80,81,82,83,84,86,87,88,89,91,92,93,94,95,97,98,99,100]},"18":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ttir_line":18,"ttgir_lines":[19,36],"ptx_lines":[101,102,103,104,105,106,107,108,109]},"19":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ttir_line":19,"ttgir_lines":[20,21,37],"ptx_lines":[110,111,112]},"20":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ttir_line":20,"ttgir_lines":[20,21,37],"ptx_lines":[110,111,112]},"21":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ttir_line":21,"ttgir_lines":[22,38],"ptx_lines":[113,114,115,116,117,119,121,122,123,124,126]},"22":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":4,"ttir_line":22,"ttgir_lines":[23,39],"ptx_lines":[128,129,130,131]},"26":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":26,"column":24,"ttir_line":26,"ttgir_lines":[6,27],"ptx_lines":[32,33]},"27":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":27,"column":24,"ttir_line":27,"ttgir_lines":[7,28],"ptx_lines":[34,35,36,37]},"28":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":41,"ttir_line":28,"ttgir_lines":[8,29],"ptx_lines":[38,39,40,41]},"29":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ttir_line":29,"ttgir_lines":[9,10,30],"ptx_lines":[42,43,44]},"30":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ttir_line":30,"ttgir_lines":[11,12,31],"ptx_lines":[45,46,47]},"31":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ttir_line":31,"ttgir_lines":[13,14,32],"ptx_lines":[48,49,50,51]},"32":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ttir_line":32,"ttgir_lines":[15,33],"ptx_lines":[52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,71,72,73,74]},"33":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ttir_line":33,"ttgir_lines":[16,17,34],"ptx_lines":[75,76,77]},"34":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ttir_line":34,"ttgir_lines":[18,35],"ptx_lines":[78,80,81,82,83,84,86,87,88,89,91,92,93,94,95,97,98,99,100]},"35":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ttir_line":35,"ttgir_lines":[19,36],"ptx_lines":[101,102,103,104,105,106,107,108,109]},"36":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ttir_line":36,"ttgir_lines":[20,21,37],"ptx_lines":[110,111,112]},"37":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ttir_line":37,"ttgir_lines":[22,38],"ptx_lines":[113,114,115,116,117,119,121,122,123,124,126]},"38":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":4,"ttir_line":38,"ttgir_lines":[23,39],"ptx_lines":[128,129,130,131]}},"ttgir":{"2":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ttgir_line":2,"ttir_lines":[1,3,4],"ptx_lines":[24,25,26,29,30,31]},"4":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ttgir_line":4,"ttir_lines":[1,3,4],"ptx_lines":[24,25,26,29,30,31]},"5":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ttgir_line":5,"ttir_lines":[1,3,4],"ptx_lines":[24,25,26,29,30,31]},"6":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":26,"column":24,"ttgir_line":6,"ttir_lines":[5,26],"ptx_lines":[32,33]},"7":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":27,"column":24,"ttgir_line":7,"ttir_lines":[6,27],"ptx_lines":[34,35,36,37]},"8":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":41,"ttgir_line":8,"ttir_lines":[7,28],"ptx_lines":[38,39,40,41]},"9":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ttgir_line":9,"ttir_lines":[8,9,29],"ptx_lines":[42,43,44]},"10":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ttgir_line":10,"ttir_lines":[8,9,29],"ptx_lines":[42,43,44]},"11":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ttgir_line":11,"ttir_lines":[10,11,30],"ptx_lines":[45,46,47]},"12":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ttgir_line":12,"ttir_lines":[10,11,30],"ptx_lines":[45,46,47]},"13":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ttgir_line":13,"ttir_lines":[12,13,31],"ptx_lines":[48,49,50,51]},"14":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ttgir_line":14,"ttir_lines":[12,13,31],"ptx_lines":[48,49,50,51]},"15":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ttgir_line":15,"ttir_lines":[14,32],"ptx_lines":[52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,71,72,73,74]},"16":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ttgir_line":16,"ttir_lines":[15,16,33],"ptx_lines":[75,76,77]},"17":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ttgir_line":17,"ttir_lines":[15,16,33],"ptx_lines":[75,76,77]},"18":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ttgir_line":18,"ttir_lines":[17,34],"ptx_lines":[78,80,81,82,83,84,86,87,88,89,91,92,93,94,95,97,98,99,100]},"19":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ttgir_line":19,"ttir_lines":[18,35],"ptx_lines":[101,102,103,104,105,106,107,108,109]},"20":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ttgir_line":20,"ttir_lines":[19,20,36],"ptx_lines":[110,111,112]},"21":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ttgir_line":21,"ttir_lines":[19,20,36],"ptx_lines":[110,111,112]},"22":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ttgir_line":22,"ttir_lines":[21,37],"ptx_lines":[113,114,115,116,117,119,121,122,123,124,126]},"23":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":4,"ttgir_line":23,"ttir_lines":[22,38],"ptx_lines":[128,129,130,131]},"27":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":26,"column":24,"ttgir_line":27,"ttir_lines":[5,26],"ptx_lines":[32,33]},"28":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":27,"column":24,"ttgir_line":28,"ttir_lines":[6,27],"ptx_lines":[34,35,36,37]},"29":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":41,"ttgir_line":29,"ttir_lines":[7,28],"ptx_lines":[38,39,40,41]},"30":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ttgir_line":30,"ttir_lines":[8,9,29],"ptx_lines":[42,43,44]},"31":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ttgir_line":31,"ttir_lines":[10,11,30],"ptx_lines":[45,46,47]},"32":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ttgir_line":32,"ttir_lines":[12,13,31],"ptx_lines":[48,49,50,51]},"33":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ttgir_line":33,"ttir_lines":[14,32],"ptx_lines":[52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,71,72,73,74]},"34":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ttgir_line":34,"ttir_lines":[15,16,33],"ptx_lines":[75,76,77]},"35":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ttgir_line":35,"ttir_lines":[17,34],"ptx_lines":[78,80,81,82,83,84,86,87,88,89,91,92,93,94,95,97,98,99,100]},"36":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ttgir_line":36,"ttir_lines":[18,35],"ptx_lines":[101,102,103,104,105,106,107,108,109]},"37":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ttgir_line":37,"ttir_lines":[19,20,36],"ptx_lines":[110,111,112]},"38":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ttgir_line":38,"ttir_lines":[21,37],"ptx_lines":[113,114,115,116,117,119,121,122,123,124,126]},"39":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":4,"ttgir_line":39,"ttir_lines":[22,38],"ptx_lines":[128,129,130,131]}},"ptx":{"24":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ptx_line":24,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"25":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ptx_line":25,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"26":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ptx_line":26,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"29":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ptx_line":29,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"30":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ptx_line":30,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"31":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":19,"column":0,"ptx_line":31,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"32":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":26,"column":24,"ptx_line":32,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"33":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":26,"column":24,"ptx_line":33,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"34":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":27,"column":24,"ptx_line":34,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"35":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":27,"column":24,"ptx_line":35,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"36":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":27,"column":24,"ptx_line":36,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"37":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":27,"column":24,"ptx_line":37,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"38":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":41,"ptx_line":38,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"39":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":41,"ptx_line":39,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"40":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":41,"ptx_line":40,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"41":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":41,"ptx_line":41,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"42":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ptx_line":42,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"43":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ptx_line":43,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"44":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":28,"column":28,"ptx_line":44,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"45":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ptx_line":45,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"46":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ptx_line":46,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"47":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":29,"column":21,"ptx_line":47,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"48":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ptx_line":48,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"49":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ptx_line":49,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"50":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ptx_line":50,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"51":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":24,"ptx_line":51,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"52":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":52,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"54":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":54,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"55":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":55,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"56":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":56,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"57":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":57,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"58":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":58,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"60":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":60,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"61":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":61,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"62":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":62,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"63":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":63,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"65":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":65,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"66":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":66,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"67":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":67,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"68":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":68,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"69":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":69,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"71":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":71,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"72":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":72,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"73":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":73,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"74":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":31,"column":16,"ptx_line":74,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"75":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ptx_line":75,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"76":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ptx_line":76,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"77":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":24,"ptx_line":77,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"78":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":78,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"80":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":80,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"81":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":81,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"82":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":82,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"83":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":83,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"84":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":84,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"86":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":86,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"87":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":87,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"88":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":88,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"89":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":89,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"91":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":91,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"92":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":92,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"93":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":93,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"94":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":94,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"95":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":95,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"97":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":97,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"98":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":98,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"99":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":99,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"100":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":32,"column":16,"ptx_line":100,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"101":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":101,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"102":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":102,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"103":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":103,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"104":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":104,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"105":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":105,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"106":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":106,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"107":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":107,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"108":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":108,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"109":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":33,"column":12,"ptx_line":109,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"110":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ptx_line":110,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"111":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ptx_line":111,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"112":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":21,"ptx_line":112,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"113":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":113,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"114":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":114,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"115":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":115,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"116":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":116,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"117":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":117,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"119":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":119,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"121":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":121,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"122":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":122,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"123":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":123,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"124":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":124,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"126":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":30,"ptx_line":126,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"128":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":4,"ptx_line":128,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"129":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":4,"ptx_line":129,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"130":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":4,"ptx_line":130,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"131":{"file":"/home/yhao/tritonparse/tests/test_add.py","line":34,"column":4,"ptx_line":131,"ttir_lines":[22,38],"ttgir_lines":[23,39]}},"python":{"19":{"ttir_lines":["1","3","4"],"ttgir_lines":["2","4","5"],"ptx_lines":["24","25","26","29","30","31"]},"26":{"ttir_lines":["5","26"],"ttgir_lines":["6","27"],"ptx_lines":["32","33"]},"27":{"ttir_lines":["6","27"],"ttgir_lines":["7","28"],"ptx_lines":["34","35","36","37"]},"28":{"ttir_lines":["7","8","9","28","29"],"ttgir_lines":["8","9","10","29","30"],"ptx_lines":["38","39","40","41","42","43","44"]},"29":{"ttir_lines":["10","11","30"],"ttgir_lines":["11","12","31"],"ptx_lines":["45","46","47"]},"31":{"ttir_lines":["12","13","14","31","32"],"ttgir_lines":["13","14","15","32","33"],"ptx_lines":["48","49","50","51","52","54","55","56","57","58","60","61","62","63","65","66","67","68","69","71","72","73","74"]},"32":{"ttir_lines":["15","16","17","33","34"],"ttgir_lines":["16","17","18","34","35"],"ptx_lines":["75","76","77","78","80","81","82","83","84","86","87","88","89","91","92","93","94","95","97","98","99","100"]},"33":{"ttir_lines":["18","35"],"ttgir_lines":["19","36"],"ptx_lines":["101","102","103","104","105","106","107","108","109"]},"34":{"ttir_lines":["19","20","21","22","36","37","38"],"ttgir_lines":["20","21","22","23","37","38","39"],"ptx_lines":["110","111","112","113","114","115","116","117","119","121","122","123","124","126","128","129","130","131"]}}}}}
